(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const o of i)if(o.type==="childList")for(const h of o.addedNodes)h.tagName==="LINK"&&h.rel==="modulepreload"&&n(h)}).observe(document,{childList:!0,subtree:!0});function e(i){const o={};return i.integrity&&(o.integrity=i.integrity),i.referrerPolicy&&(o.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?o.credentials="include":i.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function n(i){if(i.ep)return;i.ep=!0;const o=e(i);fetch(i.href,o)}})();class O{constructor(){this.channels={}}on(t,e){this.channels[t]||(this.channels[t]=[]),this.channels[t].push(e)}off(t,e){if(this.channels[t]){const n=this.channels[t].indexOf(e);n>-1&&this.channels[t].splice(n,1)}}emit(t,e){const n=this.channels[t];!n||!n.length||n.forEach(i=>i(e))}}const m=new O;function v(s,t){return Math.atan2(t.y-s.y,t.x-s.x)}class d{constructor(t,e){this.x=t,this.y=e,typeof t=="object"?(this.x=t.x||0,this.y=t.y||0):(e===void 0&&(e=t),this.x=t||0,this.y=e||0)}set(t,e){return e===void 0&&(e=t),this.x=t,this.y=e,this}copy(){return new d(this.x,this.y)}add(t){return this.x+=t.x,this.y+=t.y,this}rotateAround(t){const e=Math.cos(t),n=Math.sin(t),i=this.x,o=this.y;return this.x=i*e-o*n,this.y=i*n+o*e,this}}class D{constructor(t){this.alignmentSnapper=t,this.newPoint=null,this.lastPoint=null,this.isLockedAngle=!1}setLastPoint(t){this.lastPoint=t}update(t){if(!this.lastPoint){this.newPoint=t;return}const e=v(this.lastPoint,t),n=this.alignmentSnapper.snapToAngle(e,this.lastPoint,t);n?(this.isLockedAngle=!!n,t=n):this.isLockedAngle=!1,t=this.alignmentSnapper.snapToPoint(new d(t.x,t.y)),this.newPoint=t,this.isLockedAngle}getNewPoint(){return new d(this.newPoint.x,this.newPoint.y)}draw(t){const{lastPoint:e,isLockedAngle:n,newPoint:i}=this;e&&(n?t.strokeStyle="blue":t.strokeStyle="black",t.beginPath(),t.moveTo(e.x,e.y),t.lineTo(i.x,i.y),t.stroke(),t.strokeStyle="green",t.beginPath(),t.arc(i.x,i.y,3,0,Math.PI*2,!0),t.stroke())}}const u={START_SKETCH:"start-sketch",STOP_SKETCH:"stop-sketch",FINISHED_DRAW_SHAPE:"fineshd-draw-shape",REDRAW_CANVAS:"redraw-canvas",CREATE_ROOM:"create-room",SET_THICKNESS:"set-thickness",SET_READY:"set-ready"};class Y{constructor(t,e,n){this.sheet=t,this.projectManager=e,this.aligmentSnapper=n,this.pen=new D(n),this.bind(),m.on(u.START_SKETCH,this.start)}bind(){this.start=this.start.bind(this),this.stop=this.stop.bind(this),this.onPointerDown=this.onPointerDown.bind(this),this.onPointerMove=this.onPointerMove.bind(this)}start(){const t=this.sheet.canvas;t.addEventListener("pointerdown",this.onPointerDown),t.addEventListener("pointermove",this.onPointerMove),t.addEventListener("pointerup",this.onPointerUp),m.emit(u.CREATE_ROOM),this.sheet.add(this.pen)}stop(){const t=this.sheet.canvas;t.removeEventListener("pointerdown",this.onPointerDown),t.removeEventListener("pointermove",this.onPointerMove),t.removeEventListener("pointerup",this.onPointerUp),this.sheet.remove(this.pen),m.emit(u.SET_READY)}onPointerDown(){const t=this.projectManager.getRoom().points,e=this.pen.getNewPoint(),n=t[0];n&&e.x===n.x&&e.y===n.y?this.onFinishedDrawShape():(t.push(e),this.pen.setLastPoint(e))}onPointerMove(t){const e=this.sheet.getPointerPos(t);this.pen.update(e),this.sheet.redraw()}onFinishedDrawShape(){this.stop(),this.sheet.redraw()}onPointerUp(t){}}class j{constructor(){this.canvas=document.getElementById("canvas"),this.canvasBoundingRect=this.canvas.getBoundingClientRect(),this.canvas.width=this.canvasBoundingRect.width,this.canvas.height=this.canvasBoundingRect.height,this.ctx=this.canvas.getContext("2d"),m.on(u.REDRAW_CANVAS,this.redraw.bind(this)),this.renderList=[]}getPointerPos(t){const{x:e,y:n}=this.canvasBoundingRect;return{x:t.clientX-e,y:t.clientY-n}}add(t){this.renderList.push(t)}remove(t){const e=this.renderList.indexOf(t);e!==-1&&this.renderList.splice(e,1)}clear(){this.ctx.clearRect(0,0,this.canvasBoundingRect.width,this.canvasBoundingRect.height)}redraw(){this.clear(),this.renderList.forEach(t=>{t.draw(this.ctx)})}}class J{constructor(){this.button=document.getElementById("button"),this.button.addEventListener("click",()=>{m.emit(u.START_SKETCH)})}}function F(){let s=!1;const t=document.getElementById("edit"),e=document.getElementsByClassName("edit-container")[0],n=document.createElement("div");n.setAttribute("class","dialog"),e.appendChild(n);const i=document.createElement("div");i.setAttribute("class","place-input"),n.appendChild(i);const o=document.createElement("input");o.setAttribute("class","form-control"),o.setAttribute("placeholder",10),o.value=10,i.appendChild(o);const h=document.createElement("div");h.setAttribute("class","place-input-buttons"),i.appendChild(h);const r=document.createElement("button");r.innerHTML="ok",r.setAttribute("class","checkout-button"),n.appendChild(r),r.addEventListener("click",()=>{}),n.style.display="none",t.addEventListener("click",()=>{s?(n.style.display="none",s=!1):(n.style.display="block",s=!0)}),r.addEventListener("click",()=>{s&&(n.style.display="none",s=!1,m.emit(u.SET_THICKNESS,o.value))})}class Q{constructor(t,e){this.id=t,this.name=e,this.rooms=[]}}class z{constructor(t){this.name=t,this.points=[],this.walls=[],this.ready=!1,this.thickness=10,this.outPolygon=null,this.innerPolygon=null}}function K(){const s=document.createElement("canvas"),t=s.getContext("2d");return s.width=20,s.height=20,t.fillStyle="#f7f7f7",t.fillRect(0,0,s.width,s.height),t.moveTo(5,0),t.lineTo(0,5),t.moveTo(20,5),t.lineTo(5,20),t.strokeStyle="#777",t.stroke(),s}class X{constructor(t){this.data=t,this.pattern=K()}draw(t){this.data.ready?this.drawWalls(t):this.drawAxis(t,this.data.points)}drawWalls(t){t.strokeStyle="black";const e=new Path2D;this.drawPolygon(e,this.data.outPolygon),this.drawPolygon(e,this.data.innerPolygon),t.stroke(e);const n=t.createPattern(this.pattern,"repeat");t.fillStyle=n,t.fill(e,"evenodd"),this.fillPolygon(t,this.data.innerPolygon),this.drawAxisPoint(t)}drawAxisPoint(t){t.fillStyle="darkgray";for(let e=0;e<this.data.points.length;e++){let n=this.data.points[e];t.beginPath(),t.arc(n.x,n.y,4,0,Math.PI*2,!0),t.fill()}}drawAxis(t,e){if(e.length===0)return;t.strokeStyle="black",t.beginPath();const n=e[0];t.moveTo(n.x,n.y),t.arc(n.x,n.y,3,0,Math.PI*2,!0);for(let i=1;i<e.length;i++){let o=e[i];t.lineTo(o.x,o.y),t.arc(o.x,o.y,3,0,Math.PI*2,!0)}t.stroke()}drawPolygon(t,e){if(e.length===0)return;const n=e[0];t.moveTo(n.x,n.y);for(let i=1;i<e.length;i++){let o=e[i];t.lineTo(o.x,o.y)}t.closePath()}fillPolygon(t,e){if(e.length===0)return;const n=e[0];t.fillStyle="white",t.moveTo(n.x,n.y);for(let i=1;i<e.length;i++){let o=e[i];t.lineTo(o.x,o.y)}t.closePath(),t.fill()}}const A=Math.PI*2;function b(s,t){const e=t.x-s.x,n=t.y-s.y,i=Math.sqrt(e*e+n*n);return{x:-n/i,y:e/i}}function q(s,t){var e=b(s,t);return{x:-e.x,y:-e.y}}function S(s){const t=[];let e=s.length>0?s[0].x:void 0,n=s.length>0?s[0].y:void 0,i=e,o=n;for(let r=0;r<s.length;r++){const a=s[r],l=s[(r+1)%s.length],c=q(a,l),g=b(a,l),y={vertex1:a,vertex2:l,index:r,outwardNormal:c,inwardNormal:g};t.push(y);const f=s[r].x,R=s[r].y;e=Math.min(f,e),n=Math.min(R,n),i=Math.max(f,i),o=Math.max(R,o)}return{vertices:s,edges:t,minX:e,minY:n,maxX:i,maxY:o}}function B(s,t){const e=(t.vertex2.y-t.vertex1.y)*(s.vertex2.x-s.vertex1.x)-(t.vertex2.x-t.vertex1.x)*(s.vertex2.y-s.vertex1.y);if(e==0)return null;const n=((t.vertex2.x-t.vertex1.x)*(s.vertex1.y-t.vertex1.y)-(t.vertex2.y-t.vertex1.y)*(s.vertex1.x-t.vertex1.x))/e,i=((s.vertex2.x-s.vertex1.x)*(s.vertex1.y-t.vertex1.y)-(s.vertex2.y-s.vertex1.y)*(s.vertex1.x-t.vertex1.x))/e,o=n<0||i<0||n>1||i>1;return{x:s.vertex1.x+n*(s.vertex2.x-s.vertex1.x),y:s.vertex1.y+n*(s.vertex2.y-s.vertex1.y),isIntersectionOutside:o}}function T(s,t,e,n,i,o,h){var r=Math.atan2(i.y-e.y,i.x-e.x),a=Math.atan2(o.y-e.y,o.x-e.x);r<0&&(r+=A),a<0&&(a+=A);const l=r>a?r-a:r+A-a,c=(h?-l:A-l)/s;t.push(i);for(let g=1;g<s;++g){const y=r+c*g,f={x:e.x+Math.cos(y)*n,y:e.y+Math.sin(y)*n};t.push(f)}t.push(o)}function k(s,t,e){return{vertex1:{x:s.vertex1.x+t,y:s.vertex1.y+e},vertex2:{x:s.vertex2.x+t,y:s.vertex2.y+e}}}function Z(s,t,e){const n=[];for(let h=0;h<s.edges.length;h++){const r=s.edges[h],a=r.outwardNormal.x*t,l=r.outwardNormal.y*t;n.push(k(r,a,l))}const i=[];for(let h=0;h<n.length;h++){const r=n[h],a=n[(h+n.length-1)%n.length],l=B(a,r);if(l&&(!l.isIntersectionOutside||e<1))i.push(new d(l.x,l.y));else{const c=s.edges[h].vertex1;T(e,i,c,t,a.vertex2,r.vertex1,!1)}}const o=S(i);return o.offsetEdges=n,o}function V(s,t,e){const n=[];for(let h=0;h<s.edges.length;h++){const r=s.edges[h],a=r.inwardNormal.x*t,l=r.inwardNormal.y*t;n.push(k(r,a,l))}const i=[];for(let h=0;h<n.length;h++){const r=n[h],a=n[(h+n.length-1)%n.length],l=B(a,r);if(l&&(!l.isIntersectionOutside||e<1))i.push(new d(l.x,l.y));else{const c=s.edges[h].vertex1;T(e,i,c,t,a.vertex2,r.vertex1,!0)}}const o=S(i);return o.offsetEdges=n,o}function w(s,t,e=0){const n=S(s);return t>0?Z(n,t,e).vertices:V(n,-t,e).vertices}class H{constructor(){this.points=[],this.axis=[],this.thiсkness=20}}var G={};const P={set:s=>{const t=document.getElementsByTagName("body")[0];t.style.cursor=`url('${G.PUBLIC_URL}/assets/img/${s}'),auto`},auto:()=>{const s=document.getElementsByTagName("body")[0];s.style.cursor="auto"},move:()=>{const s=document.getElementsByTagName("body")[0];s.style.cursor="move"},pointer:()=>{const s=document.getElementsByTagName("body")[0];s.style.cursor="pointer"}};function M(s,t){var e=s.x-t.x,n=s.y-t.y;return Math.sqrt(e*e+n*n)}function _(s,t){const e=t.x-s.x,n=t.y-s.y;return new d(-n,e)}function p(s,t){const e=t.length;let n=!1,i=0;for(let o=0;o<e;o++){const h=t[o],r=t[(o+1)%e];s.y>Math.min(h.y,r.y)&&s.y<=Math.max(h.y,r.y)&&s.x<=Math.max(h.x,r.x)&&(h.y!==r.y&&(i=(s.y-h.y)*(r.x-h.x)/(r.y-h.y)+h.x),(h.x===r.x||s.x<=i)&&(n=!n))}return n}function W(s){const t=s.reduce((r,a,l)=>s[r].x>a.x?l:r,0),e=$(t,s.length-1),n={x:s[e.middleIndex].x-s[e.beginIndex].x,y:s[e.middleIndex].y-s[e.beginIndex].y},i={x:s[e.lastIndex].x-s[e.middleIndex].x,y:s[e.lastIndex].y-s[e.middleIndex].y};return n.x*i.y-i.x*n.y>0}function $(s,t){s===0&&(s=t);const e=s+1;return{beginIndex:s-1,middleIndex:s,lastIndex:e>t?1:e}}function N(s,t){const[e,n]=s,i=n.x-e.x,o=n.y-e.y;let h=((t.x-e.x)*i+(t.y-e.y)*o)/(i*i+o*o);h=Math.min(1,Math.max(0,h));const r=C(e.x,n.x,h),a=C(e.y,n.y,h);return{x:r,y:a}}function C(s,t,e){return s+e*(t-s)}function tt(s){return!isNaN(parseFloat(s))&&isFinite(s)}class et{constructor(t){this.sheet=t,this.room=null,this.curWall=null,this.prevPos=null,m.on(u.SET_THICKNESS,this.setThickness.bind(this))}atach(t){this.room=t,this.calcRoomPolygon(),this.createRoomWalls();const e=this.sheet.canvas;e.addEventListener("pointerdown",this.onPointerDown.bind(this)),e.addEventListener("pointermove",this.onPointerMove.bind(this)),e.addEventListener("pointerup",this.onPointerUp.bind(this))}deatach(){this.room=null}calcRoomPolygon(){W(this.room.points)?(this.room.outPolygon=w(this.room.points,this.room.thickness),this.room.innerPolygon=w(this.room.points,-this.room.thickness)):(this.room.outPolygon=w(this.room.points,-this.room.thickness),this.room.innerPolygon=w(this.room.points,this.room.thickness))}createRoomWalls(){const t=this.room.outPolygon.length;for(let e=0;e<t;e++){const n=new H;n.axis=[this.room.points[e],this.room.points[(e+1)%t]],n.points=[this.room.outPolygon[e],this.room.outPolygon[(e+1)%t],this.room.innerPolygon[(e+1)%t],this.room.innerPolygon[e]],this.room.walls.push(n)}}updateWallPoints(){const t=this.room.outPolygon.length,e=this.room.walls;for(let n=0;n<e.length;n++){const i=e[n];i.points=[this.room.outPolygon[n],this.room.outPolygon[(n+1)%t],this.room.innerPolygon[(n+1)%t],this.room.innerPolygon[n]]}}onPointerDown(t){const e=this.sheet.getPointerPos(t),n=this.getWallUnderPointer(e);n&&(this.curWall=n,P.move(),this.prevPos=e)}onPointerMove(t){const e=this.sheet.getPointerPos(t);this.curWall?(this.dragWall(e),m.emit(u.REDRAW_CANVAS),this.prevPos=e):this.getWallUnderPointer(e)?P.pointer():P.auto()}onPointerUp(){this.curWall&&(this.curWall=null,P.auto())}dragWall(t){const[e,n]=this.curWall.axis,i=_(e,n),o=v({x:0,y:0},i);if(!tt(o))return;const h=N(this.curWall.axis,t);if(h.x===e.x&&h.y===e.y||h.x===n.x&&h.y===n.y){this.curWall=null;return}let r=M(this.prevPos,t);const a=Math.sign(t.x-h.x),l=Math.sign(t.y-h.y),c=new d(Math.abs(Math.cos(o)*r)*a,Math.abs(Math.sin(o)*r)*l);this.curWall.axis.forEach(g=>g.add(c)),this.curWall.points.forEach(g=>g.add(c)),this.calcRoomPolygon(),this.updateWallPoints()}getWallUnderPointer(t){const e=this.room.walls;for(let n=0;n<e.length;n++){const i=e[n];if(p(t,i.points))return i}return!1}setThickness(t){this.room.thickness=t,this.calcRoomPolygon(),this.updateWallPoints(),m.emit(u.REDRAW_CANVAS)}}class nt{constructor(t){this.project=new Q(1,"test"),this.sheet=t,this.roomEditor=new et(this.sheet),this.addListeners()}addListeners(){m.on(u.CREATE_ROOM,this.createRoom.bind(this)),m.on(u.SET_READY,this.setSketchReady.bind(this))}getProject(){return project}getRoom(){return this.project.rooms[0]}createRoom(t){const e=new z("blank");this.project.rooms.push(e);const n=new X(e);this.sheet.add(n)}setSketchReady(){this.project.rooms[0].ready=!0,this.roomEditor.atach(this.project.rooms[0])}getRoomByName(t){return this.project.rooms.find(e=>{if(e.name===t)return!0})}}const I=[0,Math.PI*.25,Math.PI*.5,Math.PI*.75,Math.PI],L=.06,E=8;class st{constructor(t){this.points=[],this.projectManager=t}snapToAngle(t,e,n){for(let i=0;i<I.length;i++){const o=I[i],h=Math.sign(t),r=Math.abs(t)-o;if(r<L&&r>-L){const a=Math.abs(M(e,n)),l=Math.cos(o*h),c=Math.sin(o*h),g=a*l+e.x,y=a*c+e.y;return{x:g,y}}}return!1}snapToPoint(t){var n;return((n=this.projectManager.getRoom())==null?void 0:n.points).forEach(i=>{i.x<t.x+E&&i.x>t.x-E&&(t.x=i.x),i.y<t.y+E&&i.y>t.y-E&&(t.y=i.y)}),t}}function it(s,t,e){if(!s||!t||!e)debugger;const n=new d(t.x-s.x,t.y-s.y),i=new d(e.x-s.x,e.y-s.y),o=n.x*i.x+n.y*i.y,h=Math.sqrt(n.x*n.x+n.y*n.y),r=Math.sqrt(i.x*i.x+i.y*i.y),a=o/(h*r);return Math.acos(a)}const U=Math.PI,x=U/2;class ot{constructor(t){this.projectManager=t,this.sheet=t.sheet,this.img=new Image,this.img.src="data:image/png;base64, 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",this.imgX=0,this.imgY=0,this.imgAngle=0,this.img.addEventListener("load",()=>{this.imgWidth=this.img.naturalWidth,this.imgHeight=this.img.naturalHeight,this.imgHalfDiagonal=Math.sqrt(Math.pow(this.imgWidth/2,2)+Math.pow(this.imgHeight/2,2)),this.imgX=this.imgWidth/2,this.imgY=this.imgHeight/2}),this.offsetX=0,this.offsetY=0,this.date=null,this.cursorIsPointer=!1,m.on(u.SET_READY,this.startUsing.bind(this)),this.bind(),this.closestPoint=null,this.nearestAdjacentLnes=null,this.adjacentClosestPoint=null,this.localPoint=null}bind(){this.onPointerDown=this.onPointerDown.bind(this),this.onPointerMove=this.onPointerMove.bind(this),this.onPointerUp=this.onPointerUp.bind(this)}startUsing(){const t=this.sheet.canvas;t.addEventListener("pointerdown",this.onPointerDown),t.addEventListener("pointermove",this.onPointerMove),t.addEventListener("pointerup",this.onPointerUp),this.sheet.add(this)}onPointerDown(t){const e=this.sheet.getPointerPos(t);this.hitImage(e)&&(this.isDraggable=!0,this.offsetX=e.x-this.imgX,this.offsetY=e.y-this.imgY,P.move())}onPointerMove(t){const e=this.sheet.getPointerPos(t);if(this.isDraggable){const n=this.projectManager.getRoom().innerPolygon,i=this.projectManager.getRoom().outPolygon;this.overShape=p(e,i),this.overShape&&(this.data=this.getClosestLine(e,n)),this.data&&this.data.minDisttance<this.imgWidth/1.8?(this.imgAngle=v(n[this.data.index],n[(this.data.index+1)%n.length]),this.getAngSofa(this.data,n),this.getNewPos(this.data,n)):(this.imgX=e.x,this.imgY=e.y,this.imgAngle=0),m.emit(u.REDRAW_CANVAS)}else this.hitImage(e)?(P.pointer(),this.cursorIsPointer=!0):this.cursorIsPointer&&(P.auto(),this.cursorIsPointer=!1)}getNewPos(t,e){const n=this.imgHeight/2;let i=t.closestPoint.x+(n+1)*Math.cos(this.imgAngle+x),o=t.closestPoint.y+(n+1)*Math.sin(this.imgAngle+x);this.closestPoint=t.closestPoint,this.nearestAdjacentLnes=null,this.imgX=i,this.imgY=o;const h=this.getClosestLine({x:i,y:o},e,t.index);if(this.adjacentClosestPoint=h.closestPoint,this.nearestAdjacentLnes=[e[h.index],e[(h.index+1)%e.length]],this.isPointOut(e)){const r=this.getPointsNeighboringLines(t.index,h.index,e),a=it(...r),l=v(r[0],r[1]),c=Math.cos(l),g=Math.sin(l);if(a<x){const y=Math.sin(x-a)/Math.sin(a)*this.imgHeight;t.closestPoint.x=r[0].x+c*(y+this.imgWidth/2),t.closestPoint.y=r[0].y+g*(y+this.imgWidth/2)}else t.closestPoint.x=r[0].x+c*this.imgWidth/2,t.closestPoint.y=r[0].y+g*this.imgWidth/2;i=t.closestPoint.x+(n+1)*Math.cos(this.imgAngle+x),o=t.closestPoint.y+(n+1)*Math.sin(this.imgAngle+x)}this.imgX=i,this.imgY=o}getPointsNeighboringLines(t,e,n){return t===0&&e===n.length-1?[n[t],n[t+1],n[e]]:e===0&&t===n.length-1?[n[e],n[t],n[e+1]]:t<e?[n[e],n[t],n[(e+1)%n.length]]:t>e?[n[t],n[(t+1)%n.length],n[e]]:[n[t],n[(t+1)%n.length],n[t-1]]}getAngSofa(t,e){const{index:n,closestPoint:i,minDisttance:o,pointerPos:h}=t,r=v(e[n],e[(n+1)%e.length]);v(i,h),this.imgAngle=r,W(e)?this.imgAngle=r:this.imgAngle=r-U}isPointOut(t){const e=this.getVertexImage();console.log(e);for(let n=0;n<e.length;n++){const i=e[n];if(!p(i,t))return!0}}onPointerUp(t){this.isDraggable&&(this.isDraggable=!1)}draw(t){this.imgAngle?(this.drawImageCenter(t,this.img,this.imgX,this.imgY,this.imgWidth/2,this.imgHeight/2,1,this.imgAngle),t.setTransform(1,0,0,1,0,0)):t.drawImage(this.img,this.imgX-this.imgWidth/2,this.imgY-this.imgHeight/2),this.closestPoint&&(t.strokeStyle="red",t.beginPath(),t.moveTo(this.closestPoint.x,this.closestPoint.y),t.arc(this.closestPoint.x,this.closestPoint.y,2,0,Math.PI*2,!0),t.stroke())}drawImageCenter(t,e,n,i,o,h,r,a){t.setTransform(r,0,0,r,n,i),t.rotate(a),t.drawImage(e,-o,-h)}hitImage(t){const e=new d(t.x-this.imgX,t.y-this.imgY);e.rotateAround(this.imgAngle);const n=this.imgWidth/2,i=this.imgHeight/2;return e.x>-n&&e.x<n&&e.y>-i&&e.y<i}getClosestLine(t,e,n){let i=0,o=null,h=1e5,r=1e5;const a=e.length;for(let l=0;l<a;l++){if(n!==void 0&&l===n)continue;const c=e[l],g=e[(l+1)%a],y=N([c,g],t),f=M(t,y);f<h&&(h=f,i=l,o=y,r=f)}return{index:i,closestPoint:o,minDisttance:r,pointerPos:t}}getVertexImage(){const t=this.imgWidth/2,e=this.imgHeight/2,n=new d(this.imgX,this.imgY);let i={tl:new d(-t,-e),tr:new d(t,-e),bl:new d(-t,e),br:new d(t,e)};return this.imgAngle,this.imgAngle===0?[i.tl.add(n),i.tr.add(n),i.bl.add(n),i.br.add(n)]:[i.tl.rotateAround(this.imgAngle).add(n),i.tr.rotateAround(this.imgAngle).add(n),i.bl.rotateAround(this.imgAngle).add(n),i.br.rotateAround(this.imgAngle).add(n)]}}class rt{constructor(){this.startDrawBtn=new J,this.sheet=new j,this.projectManager=new nt(this.sheet),this.alignmentSnapper=new st(this.projectManager),this.skether=new Y(this.sheet,this.projectManager,this.alignmentSnapper),this.sofa=new ot(this.projectManager),F()}}window.addEventListener("load",()=>{new rt});
